patch:
  engine/filters/@after 0: lua_filter@*aux_code@all-utf8.ini
  #aux_code/phrase: false  # 取消注释来禁用自定义短语加入候选
  #aux_code/filter: false  # 取消注释来禁用辅助码筛词

  # 使用词库来替换 lua 插件实现的自定义短语 {{{
  aux_code/phrase: false  # 取消注释来禁用自定义短语加入候选
  engine/translators:
    - punct_translator
    - reverse_lookup_translator
    - lua_translator@*top_translator
  single: # custom_phrase; used in top_translator
    dictionary: ''
    user_dict: single
    db_class: stabledb
    initial_quality: 100
    enable_completion: false
    enable_sentence: false

  flypy: # copied from double_pinyin_flypy.schema.yaml; used in top_translator
    dictionary: luna_pinyin
    prism: double_pinyin_flypy
  speller/algebra/@next: abbrev/^(.).+$/$1/  # 超级简拼
  translator/preedit_format: []  # 避免转换预编辑到全拼

  # 与上方的 flypy 二选一; 上方的是使用 luna_pinyin; 这里的是使用小鹤的码表.
  # TODO: 是否可以使用现成的词库?
  # flypy:
  #   dictionary: flypy_simp
  #   prism: flypy_simp
  # translator: # 如果不指定这个, 就无法生成 dict.
  #   dictionary: flypy_simp
  #   prism: flypy_simp
  # speller/algebra:
  #   - derive/^(..).*$/$1/
  #   - derive/^(.).*$/$1/

  # }}}

  ascii_composer/switch_key/Shift_L: commit_code
  ascii_composer/switch_key/Shift_R: commit_code
  key_binder/bindings/+:
    - { when: has_menu, accept: semicolon, send: 2 }  # 次选
    - { when: has_menu, accept: bracketleft, send: Page_Up }
    - { when: has_menu, accept: bracketright, send: Page_Down }
    - { when: has_menu, accept: Control+BackSpace, send: Escape }  # 清屏
    - { when: has_menu, accept: Control+1, send: Shift+Delete }  # 删除当前候选词
